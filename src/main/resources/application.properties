### Basics
quarkus.swagger-ui.always-include=false
quarkus.http.port=3000
quarkus.http.cors=true
quarkus.http.cors.origins=*
quarkus.http.cors.methods=GET,POST,PUT,DELETE
quarkus.http.cors.headers=Content-Type,Authorization

### Codeforces Credentials
codeforces.apiKey=c6e4b6a23aa4b7235fcdf25bfa7d619ac7d9f4d8
codeforces.apiSecret=ce62405f9f099ef16a9b0c00cf88846a1fce41b6
codeforces.randomString=123456

### Logging
quarkus.log.level=OFF

### RUNNING QUARKUS LOCALLY
#kafka.bootstrap.servers=localhost:9092
#quarkus.mongodb.connection-string=mongodb://localhost:27017
#openSearch.host=localhost
#quarkus.redis.hosts=redis://localhost:6379

### RUNNING QUARKUS IN DOCKER
kafka.bootstrap.servers=kafka:9092
quarkus.mongodb.connection-string=mongodb://mongodb:27017
openSearch.host=opensearch
quarkus.redis.hosts=redis://redis:6379

### MongoDB
quarkus.mongodb.database=codeforces

### Kafka Topic - User Info
mp.messaging.outgoing.CFUserInfo.connector=smallrye-kafka
mp.messaging.outgoing.CFUserInfo.topic=codeforcesUserInfo
mp.messaging.outgoing.CFUserInfo.serializer=org.apache.kafka.common.serialization.StringSerializer

### Kafka Topic - Blog Entry
mp.messaging.outgoing.CFBlogEntry.connector=smallrye-kafka
mp.messaging.outgoing.CFBlogEntry.topic=codeforcesBlogEntry
mp.messaging.outgoing.CFBlogEntry.serializer=org.apache.kafka.common.serialization.StringSerializer

### MongoDB Consumer - User Info (Kafka -> MongoDB)
mp.messaging.incoming.UserInfoIn.connector=smallrye-kafka
mp.messaging.incoming.UserInfoIn.topic=codeforcesUserInfo
mp.messaging.incoming.UserInfoIn.group.id=mongodb-consumer
mp.messaging.incoming.UserInfoIn.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.UserInfoIn.partitions=1
mp.messaging.incoming.UserInfoIn.concurrency=1

### MongoDB Consumer - Blog Entry (Kafka -> MongoDB)
mp.messaging.incoming.BlogEntryIn.connector=smallrye-kafka
mp.messaging.incoming.BlogEntryIn.topic=codeforcesBlogEntry
mp.messaging.incoming.BlogEntryIn.group.id=mongodb-consumer
mp.messaging.incoming.BlogEntryIn.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.BlogEntryIn.partitions=1
mp.messaging.incoming.BlogEntryIn.concurrency=1

### OpenSearch
openSearch.port=9200