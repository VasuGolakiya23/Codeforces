#Basics
quarkus.swagger-ui-always-include=false
quarkus.http.port=3000
quarkus.http.cors=true
quarkus.http.cors.origins=*
quarkus.http.cors.methods=GET,POST,PUT,DELETE
quarkus.http.cors.headers=Content-Type,Authorization

#Codeforces credentials
codeforces.apiKey=c6e4b6a23aa4b7235fcdf25bfa7d619ac7d9f4d8
codeforces.apiSecret=ce62405f9f099ef16a9b0c00cf88846a1fce41b6
codeforces.randomString=123456

# logging
quarkus.log.level=OFF

# Kafka Broker
kafka.bootstrap.servers=localhost:9092

# MongoDB
quarkus.mongodb.connection-string=mongodb://localhost:27017
quarkus.mongodb.database=codeforces

# Kafka Topic-1
mp.messaging.outgoing.CFUserInfo.connector=smallrye-kafka
mp.messaging.outgoing.CFUserInfo.topic=codeforcesUserInfo
mp.messaging.outgoing.CFUserInfo.serializer=org.apache.kafka.common.serialization.StringSerializer

# Kafka Topic-2
mp.messaging.outgoing.CFBlogEntry.connector=smallrye-kafka
mp.messaging.outgoing.CFBlogEntry.topic=codeforcesBlogEntry
mp.messaging.outgoing.CFBlogEntry.serializer=org.apache.kafka.common.serialization.StringSerializer

# MongoDB Consumer (Topic-1)
mp.messaging.incoming.UserInfoIn.connector=smallrye-kafka
mp.messaging.incoming.UserInfoIn.topic=codeforcesUserInfo
mp.messaging.incoming.UserInfoIn.group.id=mongodb-consumer
mp.messaging.incoming.UserInfoIn.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.UserInfoIn.partitions=1
mp.messaging.incoming.UserInfoIn.concurrency=1

# MongoDB Consumer (Topic-2)
mp.messaging.incoming.BlogEntryIn.connector=smallrye-kafka
mp.messaging.incoming.BlogEntryIn.topic=codeforcesBlogEntry
mp.messaging.incoming.BlogEntryIn.group.id=mongodb-consumer
mp.messaging.incoming.BlogEntryIn.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
mp.messaging.incoming.BlogEntryIn.partitions=1
mp.messaging.incoming.BlogEntryIn.concurrency=1

# redis
quarkus.redis.hosts=redis://localhost:6379